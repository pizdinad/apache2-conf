#
# Server-Pool Management (MPM specific)
#




# https://httpd.apache.org/docs/2.4/mod/core.html#ifmodule
# Description: Прилагает директивы, которые обрабатываются в зависимости от наличия или отсутствия конкретного модуля
# Syntax: <IfModule [!]module-file|module-identifier> ... </IfModule>
# Context:    server config, virtual host, directory, .htaccess

# https://httpd.apache.org/docs/2.4/mod/mpm_netware.html
<IfModule !mpm_netware_module>

# https://httpd.apache.org/docs/current/mod/mpm_common.html#pidfile
# Description: Файл, в котором сервер записывает идентификатор процесса демона. Если имя файла не является абсолютным, то предполагается, что оно относится к ServerRoot.
# Syntax: PidFile filename
# Default:    PidFile logs/httpd.pid
# Context:    server config

#PidFile "run/httpd.pid"
</IfModule>






# prefork MPM
# StartServers: number of server processes to start
# MinSpareServers: minimum number of server processes which are kept spare
# MaxSpareServers: maximum number of server processes which are kept spare
# MaxRequestWorkers: maximum number of server processes allowed to start
# MaxConnectionsPerChild: maximum number of requests a server process serves


# # https://httpd.apache.org/docs/2.4/mpm.html -> mpm
# http://httpd.apache.org/docs/2.4/mod/prefork.html -> mpm prefork
# http://muff.kiev.ua/content/apache-vybor-mpm -> doc-ua
#
# Desc: реализует не-поточный, предварительно открытый веб-сервер. Каждый серверный процесс может отвечать на входящие запросы, а родительский процесс управляет размером пула серверов. Он подходит для сайтов, которым необходимо избегать потоковой передачи для совместимости с не-потоковыми библиотеками. Это также лучший MPM для изоляции каждого запроса, так что проблема с одним запросом не повлияет ни на какой другой. (также см.заметки)
# с сервером может быть скомпилирован один и только один МП-модуль (МП-модуль по умолчанию для UNIX prefork, worker или event, в зависимости от возможностей платформы )

<IfModule mpm_prefork_module>

# min & max кол-во неиспользуемых(свободных) дочерних процессов сервера
    MinSpareServers       5
    MaxSpareServers      10


# https://httpd.apache.org/docs/2.4/mod/mpm_common.html#serverlimit
# Desc: устанавливает максимальное настроенное значение для MaxRequestWorkers для времени жизни процесса Apache httpd. используйте эту директиву, только если вам нужно установить MaxRequestWorkers выше 256 (по умолчанию).
# устанавливает верхний предел количества одновременно активных процессов
    #ServerLimit        256


# MaxRequestWorkers - максимальное количество дочерних процессов(клиентов), которые будут запущены для обслуживания запросов.
    MaxRequestWorkers     100



# MaxConnectionsPerChild - устанавливает ограничение на количество соединений(запросов), которые обрабатывает процесс отдельного дочернего сервера. После соединений MaxConnectionsPerChild дочерний процесс умрет. Если MaxConnectionsPerChild равно 0, процесс никогда не истечет.
# Установка MaxConnectionsPerChild на ненулевое значение ограничивает объем памяти, который процесс может потреблять при (случайной) утечке памяти.
    MaxConnectionsPerChild   0


</IfModule>











# worker MPM
# StartServers: initial number of server processes to start
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestWorkers: maximum number of worker threads
# MaxConnectionsPerChild: maximum number of connections a server process serves
#                         before terminating
<IfModule mpm_worker_module>
    StartServers             3
    MinSpareThreads         75
    MaxSpareThreads        250
    ThreadsPerChild         25
    MaxRequestWorkers      400
    MaxConnectionsPerChild   0
</IfModule>













# event MPM
# StartServers: initial number of server processes to start
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestWorkers: maximum number of worker threads
# MaxConnectionsPerChild: maximum number of connections a server process serves
#                         before terminating
<IfModule mpm_event_module>
    StartServers             3
    MinSpareThreads         75
    MaxSpareThreads        250
    ThreadsPerChild         25
    MaxRequestWorkers      400
    MaxConnectionsPerChild   0
</IfModule>

# NetWare MPM
# ThreadStackSize: Stack size allocated for each worker thread
# StartThreads: Number of worker threads launched at server startup
# MinSpareThreads: Minimum number of idle threads, to handle request spikes
# MaxSpareThreads: Maximum number of idle threads
# MaxThreads: Maximum number of worker threads alive at the same time
# MaxConnectionsPerChild: Maximum  number of connections a thread serves. It
#                         is recommended that the default value of 0 be set
#                         for this directive on NetWare.  This will allow the
#                         thread to continue to service requests indefinitely.
<IfModule mpm_netware_module>
    ThreadStackSize      65536
    StartThreads           250
    MinSpareThreads         25
    MaxSpareThreads        250
    MaxThreads            1000
    MaxConnectionsPerChild   0
</IfModule>

# OS/2 MPM
# StartServers: Number of server processes to maintain
# MinSpareThreads: Minimum number of idle threads per process,
#                  to handle request spikes
# MaxSpareThreads: Maximum number of idle threads per process
# MaxConnectionsPerChild: Maximum number of connections per server process
<IfModule mpm_mpmt_os2_module>
    StartServers             2
    MinSpareThreads          5
    MaxSpareThreads         10
    MaxConnectionsPerChild   0
</IfModule>

# WinNT MPM
# ThreadsPerChild: constant number of worker threads in the server process
# MaxConnectionsPerChild: maximum number of connections a server process serves
<IfModule mpm_winnt_module>
    ThreadsPerChild        150
    MaxConnectionsPerChild   0
</IfModule>

# The maximum number of free Kbytes that every allocator is allowed
# to hold without calling free(). In threaded MPMs, every thread has its own
# allocator. When not set, or when set to zero, the threshold will be set to
# unlimited.
<IfModule !mpm_netware_module>
    MaxMemFree            2048
</IfModule>
<IfModule mpm_netware_module>
    MaxMemFree             100
</IfModule>
